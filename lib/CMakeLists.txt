cmake_minimum_required(VERSION 3.19)

option(DDL_USE_ALL "enable all device drivers")
option(DDL_USE_CORE "enable the core device driver library") 
option(DDL_USE_BASIC_TIMERS "enable the BASIC_TIMERS device driver library") 
option(DDL_USE_CRC "enable the CRC device driver library")
option(DDL_USE_GPIO "enable the GPIO device driver library")
option(DDL_USE_INTERRUPTS "enable the INTERRUPTS device driver library")
option(DDL_USE_RTC "enable the RTC device driver library")
option(DDL_USE_UART "enable the UART device driver library")

add_library(hc32l110 INTERFACE)
target_include_directories(hc32l110 INTERFACE  ${CMAKE_CURRENT_SOURCE_DIR}/include)
if(DDL_USE_CORE OR DDL_USE_ALL)
    target_compile_definitions(hc32l110_driver INTERFACE DDL_USE_CORE 1)
    if(DDL_USE_ALL OR DDL_USE_INTERRUPTS)
        target_compile_definitions(hc32l110_driver INTERFACE DDL_USE_INTERRUPTS 1)
    endif()
    if(DDL_USE_ALL OR DDL_USE_GPIO)
        target_compile_definitions(hc32l110_driver INTERFACE DDL_USE_GPIO 1)
    endif()
    if(DDL_USE_ALL OR DDL_USE_BASIC_TIMERS)
        target_compile_definitions(hc32l110_driver INTERFACE DDL_USE_BASIC_TIMERS 1)
    endif()  
    if(DDL_USE_ALL OR DDL_USE_CRC)
        target_compile_definitions(hc32l110_driver INTERFACE DDL_USE_CRC 1)
    endif()   
    if(DDL_USE_All OR DDL_USE_RTC)
        target_compile_definitions(hc32l110_driver INTERFACE DDL_USE_RTC 1)
    endif()   
    if(DDL_USE_All OR DDL_USE_UART)
        target_compile_definitions(hc32l110_driver INTERFACE DDL_USE_BASIC_TIMERS 1)
        target_compile_definitions(hc32l110_driver INTERFACE DDL_USE_UART 1)
    endif()       
endif()
